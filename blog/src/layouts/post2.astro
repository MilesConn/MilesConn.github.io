---
import { SITE } from "$/config";
import MainLayout from "$/components/MainLayout.astro";
import BaseHead from "$/components/BaseHead.astro";
// TODO: I don't like this and I'd rather have fonts in our public folder
import "@fontsource/castoro";
import "@fontsource/alfa-slab-one";
import "@fontsource/shippori-mincho";
import "@fontsource/fira-mono";
import Prose from "$/components/Prose.astro";
import { extractLinks } from "src/lib/markdownUtils";
import LineComponent from "$/components/LineComponent.astro";
import Tag from "$/components/Tag.astro";
import TableOfContents from "$/components/TableOfContents/index.svelte";

const { content, rawContent, headings } = Astro.props;

console.log("headings ", headings);
// We are going to have convert obsidian links to normal links
const links = extractLinks(rawContent);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead
      title={content.title ? `${SITE.title} | ${content.title}` : SITE.title}
      description={content.description}
    />
  </head>
  <MainLayout>
    <div class="py-4 mb-1">
      <!-- TODO: Figure out how to get arbitrary value one off font for  -->
      <h1
        class="text-4xl font-display text-theme-primary dark:text-theme-dark-primary"
      >
        {content.title}
      </h1>
      <span class="text-black p-5 font-mono">
        last modified:
        {
          new Intl.DateTimeFormat("en-US", { dateStyle: "full" }).format(
            new Date(content.date)
          )
        }
      </span>
      <LineComponent className="mx-1" />
      <div class="inline-flex gap-2">
        {
          content.tags.length > 0 &&
            content.tags.map((tag: string) => <Tag {tag} />)
        }
      </div>
    </div>
    <div class="TableOfContents">
      <TableOfContents headings={headings} client:load />
    </div>

    <!--<img src={content.image} alt={content.title} />-->
    <!-- TODO: get the block quote font to work :)  -->
    <article class="prose prose-p:font-serif mx-auto">
      <slot />
    </article>
  </MainLayout>

  <!-- TODO: this does work -->
  <style>
    /* This
      is
      good
      to
      know */
    .TableOfContents
      :global(> * + :where(astro-island, astro-slot) > *:first-child) {
      @apply mb-5 ml-1;
    }

    /* Works */
    .foo__bar {
      /* @apply prose-p:text-blue-600; */
      /* @apply text-red-600; */
      /* color: #60a5fa !important; */
      /* @apply text-red-600; */
      /* @apply px-8; */
    }
    .font__shiporri {
      font-family: "Shippori Mincho";
    }

    /* article.prose :is(:where(blockquote):not(:where([class~="not-prose"] *))) {
      @apply pl-4 border-l-4 border-blue-500 relative;
    } */
  </style>
</html>
